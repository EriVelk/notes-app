"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Calendar=exports.CONSTANT_DAYS_ORDER=void 0,exports.CONSTANT_DAYS_ORDER=[31,28,31,30,31,30,31,31,30,31,30,31];class Calendar{constructor(options){this.year=this._validate(options&&options.year||(new Date).getFullYear(),"number","year"),this.month=this._validate(options&&options.month||(new Date).getMonth(),"number","month"),this.days=["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],this.months=["January","February","March","April","May","June","July","August","September","October","November","December"],this.holidays=[0]}setDays(days){const isValid=7===days.length&&days.some(x=>"string"==typeof x);if(!isValid)throw new Error("Invalid days data");return this.days=days,this}setMonths(months){const isValid=12===months.length&&months.some(x=>"string"==typeof x);if(!isValid)throw new Error("Invalid months data");return this.months=months,this}setHolidays(data){const isValid=data.some(x=>"number"==typeof x&&x>=0&&x<7);if(!isValid)throw new Error("Invalid holidays data");return this.holidays=data,this}get length(){return 1===this.month&&(this.year%4==0&&this.year%100!=0||this.year%400==0)?29:exports.CONSTANT_DAYS_ORDER[this.month]}get leap(){return this.year%4==0&&this.year%100!=0||this.year%400==0}get monthName(){return this.months[this.month]}create(){const firstDay=new Date(this.year,this.month,1),intitalDay=firstDay.getDay(),length=this.length,month=this.monthName;let days=[],day=1;for(let i=0;i<9;i++){for(let j=0;j<7;j++)day<=length&&(i>0||j>=intitalDay)&&(days.push({row:i,day:day,name:this.days[j],holiday:this.holidays.some(x=>x===j)}),day++);if(day>length)break}return{year:this.year,month:this.month,totalDays:length,monthName:month,days:days,leapMonth:29===this.length,leapYear:this.leap}}toString(){return`<${this.constructor.name} ${this.year}-${this.month}>`}static createCalendar(year=(new Date).getFullYear()){const valid="number"==typeof year&&year>=1e3&&year<=9999;if(!valid)throw new TypeError(`Invalid year: ${year}!`);const cal=[];for(let i=0;i<12;i++){const st=new Calendar({year:year,month:i});cal.push(st.create())}return cal}_validate(data,vtype="number",dataType){switch(dataType){case"month":if(typeof data===vtype&&data>=0&&data<=11)return data;throw new TypeError(`Invalid month: ${data}!`);case"year":if(typeof data===vtype&&data>=1e3&&data<=9999)return data;throw new TypeError(`Invalid year: ${data}!`);default:throw new Error("Invalid type")}}}exports.Calendar=Calendar,exports.default=Calendar;